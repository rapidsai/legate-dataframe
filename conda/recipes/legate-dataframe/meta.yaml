# Copyright (c) 2024-2025, NVIDIA CORPORATION.

{% set pyproject_data = load_file_data("python/pyproject.toml") %}
{% set version = environ['LEGATEDATAFRAME_PACKAGE_VERSION'] %}
{% set py_version = environ['CONDA_PY'] %}
{% set project_data = pyproject_data["project"] %}
{% set project_urls = project_data["urls"] %}
{% set cuda_version = '.'.join(environ['RAPIDS_CUDA_VERSION'].split('.')[:2]) %}
{% set cuda_major = cuda_version.split('.')[0] %}
{% set date_string = environ['RAPIDS_DATE_STRING'] %}

package:
  name: legate-dataframe-split

source:
  path: ../../..

build:
  script_env:
    - AWS_ACCESS_KEY_ID
    - AWS_SECRET_ACCESS_KEY
    - AWS_SESSION_TOKEN
    - CMAKE_C_COMPILER_LAUNCHER
    - CMAKE_CUDA_COMPILER_LAUNCHER
    - CMAKE_CXX_COMPILER_LAUNCHER
    - CMAKE_GENERATOR
    - CONDA_OVERRIDE_CUDA
    - CUDAARCHS
    - PARALLEL_LEVEL
    - SCCACHE_BUCKET
    - SCCACHE_IDLE_TIMEOUT
    - SCCACHE_REGION
    - SCCACHE_S3_KEY_PREFIX=legate-dataframe-aarch64 # [aarch64]
    - SCCACHE_S3_KEY_PREFIX=legate-dataframe-linux64 # [linux64]
    - SCCACHE_S3_USE_SSL
    - SCCACHE_S3_NO_CREDENTIALS

requirements:
  build:
    - cmake {{ cmake_version }}
    - ninja
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - {{ compiler('cuda') }}
    - cuda-version ={{ cuda_version }}
    - {{ stdlib("c") }}
  host:
    - cuda-version ={{ cuda_version }}
    - cuda-cudart-dev
    - legate {{ legate_version }} =*_gpu*
    # Only to ensure a nightly legate version we pick up
    # is compatible with an existing cupynumeric version.
    # (may also stabilize not using debug/sanitizer builds)
    - cupynumeric {{ cupynumeric_version }}
    - python
    - pip
    - cython >=3.0.3
    - rapids-build-backend >=0.3.0,<0.4.0.dev0
    - scikit-build-core >=0.10.0
    - cudf {{ rapids_version }}  # pulls in pyarrow?
    - libcudf {{ rapids_version }}
    - librmm {{ rapids_version }}
    - nccl {{ nccl_version }}
    - pylibcudf {{ rapids_version }}


outputs:
  - name: legate-dataframe
    version: {{ version }}
    string: "cuda{{ cuda_major }}_py{{ py_version }}_{{ PKG_BUILDNUM }}"
    script: install_legate-dataframe.sh
    requirements:
      # Note: build/host exists for run-exports (except cmake, pip, and python)
      # for librmm, libcudf, pylibcudf we rely on the rmm/cudf run dependency.
      build:
        - cmake {{ cmake_version }}
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
        - cuda-version ={{ cuda_version }}
        - {{ stdlib("c") }}
      host:
        - cuda-version ={{ cuda_version }}
        - legate {{ legate_version }} =*_gpu*
        - cupynumeric {{ cupynumeric_version }}
        - python
        - pip
      run:
        - python
        # cuda-version is used to constrain __cuda
        - {{ pin_compatible('cuda-version', max_pin='x', min_pin='x') }}
        - cuda-cudart
        - __cuda
        # Relying on run_exports from legate to pin an appropriate range of versions.
        #
        # legate uses {{ pin_subpackage(name, min_pin="x.x.x", max_pin="x.x.x") }}, which means
        # that if legate-dataframe builds against, say, legate=24.09.0 and then a legate=24.09.1 is
        # released, a new legate-dataframe would be required.
        - legate
        - numpy >=1.23,<3.0.0a0
        - nccl {{ nccl_version }}
        - rmm {{ rapids_version }}
        - cudf {{ rapids_version }}
        - pynvjitlink<=0.6
    ignore_run_exports_from:
      - cupynumeric  # only a build dependency to help resolver
      - nncl  # cargo-culted from raft (assume the pin is overly strict)
    run_exports:
      - {{ pin_subpackage("legate-dataframe", max_pin="x.x") }}
    test:
      # import tests at build time do not work for the CUDA packages,
      # because builds happen on machines without a GPU.  So no tests.
      commands:
        - pip show legate-dataframe
  - name: legate-df-ctests
    version: {{ version }}
    script: install_ctests.sh
    build:
      number: {{ GIT_DESCRIBE_NUMBER }}
      string: cuda{{ cuda_major }}_{{ date_string }}_{{ GIT_DESCRIBE_HASH }}_{{ GIT_DESCRIBE_NUMBER }}
    requirements:
      build:
        - cmake {{ cmake_version }}
      host:
        - {{ pin_subpackage('legate-dataframe', exact=True) }}
      run:
        - {{ pin_subpackage('legate-dataframe', exact=True) }}

about:
  home: {{ project_urls["Homepage"] }}
  dev_url: {{ project_urls["Repository"] }}
  doc_url: {{ project_urls["Documentation"] }}
  license: {{ project_data["license"]["text"] }}
  license_family: Apache
  license_file: LICENSE
  license_url: {{ project_urls["License"] }}
  summary: {{ project_data["description"] }}
